ARG UBUNTU_VERSION=22.04
ARG PLATFORM=amd64
FROM --platform=${PLATFORM} ubuntu:${UBUNTU_VERSION} as base

ARG USER=user
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_VERSION=21.x

## Create unpriv user
RUN groupadd --gid $USER_GID $USER \
    && useradd --uid $USER_UID --gid $USER_GID -m $USER \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USER ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USER \
    && chmod 0440 /etc/sudoers.d/$USER

# Install dependencies
RUN apt-get update && \
    apt-get -y install --no-install-recommends \
    git curl wget jq \
    build-essential ca-certificates default-jre \
    libudev-dev pkg-config libssl-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

## Add yq dependency for yaml parsing
ARG YQ_VERSION=v4.44.6
ARG YQ_BINARY=yq_linux_amd64
RUN set -eux && \
    wget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 5 \
        "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY}.tar.gz" -O /tmp/yq.tar.gz && \
    tar xzf /tmp/yq.tar.gz -C /tmp && \
    mv "/tmp/${YQ_BINARY}" /usr/bin/yq && \
    chmod +x /usr/bin/yq && \
    rm -f /tmp/yq.tar.gz && \
    yq --version

# Install python & python deps
RUN apt-get update && \
    apt-get -y install --no-install-recommends python3 python3-dev python3-pip python3-setuptools python3-wheel && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
RUN python3 -m pip install --upgrade pip && \
    python3 -m pip install uv

# Install node
RUN curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} | bash - && \
    apt-get install -y nodejs --no-install-recommends && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install node global deps
ARG OPENAPI_GENERATOR_VERSION=2.15.3
RUN npm install -g \
    @openapitools/openapi-generator-cli@${OPENAPI_GENERATOR_VERSION} \
    typescript \
    pnpm@latest-10

# Install rustup as root
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH
ARG RUST_VERSION=nightly
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | \
    sh -s -- -y --default-toolchain ${RUST_VERSION} && \
    rustup component add rust-src rust-analyzer-preview && \
    chown -R $USER:$USER /usr/local/rustup /usr/local/cargo
RUN rustup update
RUN chown -R $USER:$USER /usr/local/cargo

# Install near cli
ARG NEAR_CLI_VERSION=v0.17.0
RUN curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near/near-cli-rs/releases/download/${NEAR_CLI_VERSION}/near-cli-rs-installer.sh | sh

# Change to non-privileged user
USER $USER

## Install oh my zsh
# Uses "Spaceship" theme with some customization. Uses some bundled plugins and installs some more from github
RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.5/zsh-in-docker.sh)" -- \
    -t https://github.com/denysdovhan/spaceship-prompt \
    -a 'SPACESHIP_PROMPT_ADD_NEWLINE="false"' \
    -a 'SPACESHIP_PROMPT_SEPARATE_LINE="false"' \
    -p git \
    -p ssh-agent \
    -p https://github.com/zsh-users/zsh-autosuggestions \
    -p https://github.com/zsh-users/zsh-completions
ENV PATH="/home/$USER/.oh-my-zsh/bin:/home/$USER/.local/bin:$PATH"
